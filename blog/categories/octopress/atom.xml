<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | 812lcl的博客]]></title>
  <link href="http://812lcl.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://812lcl.com/"/>
  <updated>2014-03-30T14:48:03+08:00</updated>
  <id>http://812lcl.com/</id>
  <author>
    <name><![CDATA[812lcl]]></name>
    <email><![CDATA[812liuchunlei@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress添加统计与SEO]]></title>
    <link href="http://812lcl.com/blog/2013/10/29/octopresstian-jia-tong-ji-yu-seo/"/>
    <updated>2013-10-29T19:28:00+08:00</updated>
    <id>http://812lcl.com/blog/2013/10/29/octopresstian-jia-tong-ji-yu-seo</id>
    <content type="html"><![CDATA[<p>博客建好了，文章写出来，当然希望有人能看到，而且希望更多的人看到，这就需要让自己的博客可以在搜索引擎里面检索到，自己搭建的博客不像在CSDN、博客园写的文章，因为你的博客还没有被提交到搜索引擎，让它来抓取你，所以首先要到各个搜索引擎提交自己的博客地址。</p>

<p><a href="http://urlc.cn/tool/addurl.html">http://urlc.cn/tool/addurl.html</a></p>

<p><a href="http://tool.lusongsong.com/addurl.html">http://tool.lusongsong.com/addurl.html</a></p>

<p>提交到搜索引擎了，能搜索到你的文章了，你还需要做的是为你的网站、文章添加描述信息、关键字，来帮助用户准确的搜索到你的文章。关键字和描述是指网页head部分的元标签meta，是给搜索引擎看的，以此希望用户可以比较容易找到。</p>

<!-- more -->


<p>首先为你的每篇文章添加描述和关键字，本文的文件头如下：</p>

<h2>```</h2>

<p>layout: post
title: &ldquo;Octopress添加统计与SEO&rdquo;
date: 2013-10-29 22:37
comments: true
categories: Octopress
tags: [octopress, 博客, SEO]
keywords: seo, octopress, analytics, 站内搜索</p>

<h2>description: 为Octopress添加统计工具及SEO技巧</h2>

<p>```</p>

<p>这样就可以为你的文章添加关键字和描述，使搜索引擎更容易搜到你的文章。你还可以
为你的博客首页添加描述和关键字，在<code>source/index.html</code>文件顶部添加即可，方法
如上。</p>

<p>如果你没有为文章添加描述，octopress会自动以文章的前150个字符作为描述，以为
每一篇文章都添加描述，octopress模板实现以上功能的代码在<code>source/_includes/head.html</code>中：
</p>

<p><code>html
{% capture description %}{% if page.description %}{{ page.description }}{% else %}{{ content | raw_content }}{% endif %}{% endcapture %}
  &lt;meta name="description" content="{{ description | strip_html | condense_spaces | truncate:150 }}"&gt;
{% if page.keywords %}&lt;meta name="keywords" content="{{ page.keywords }}"&gt;{% endif %}
</code>

此外，也可以在<code>_config.yml</code>里添加默认的<code>description</code>和<code>keywords</code>。</p>

<h2>统计工具</h2>

<p>octopress模板里面默认带了Google Analytics工具，只需要注册<a href="http://www.google.com/analytics/">Google Analytics</a>，
获得一个google_analytics_tracking_id，添加到<code>_config.yml</code>中对应位置，并对网站进行验证即可。然后可以通过Google Analytics分析网站的流量了。而且可以使用<a href="https://www.google.com/webmasters/tools/home?hl=zh-CN">Google站长工具</a>，对网站进行更全面的分析，进行SEO。</p>

<p>对自己的网站进行验证，只需将网站提供的用于验证的代码添加到<code>source/_includes/head.html</code>的<code>&lt;head&gt;</code>标签之间，网站部署到网上后，过几分钟即可验证通过，其他需要验证的也同样操作。</p>

<p>除了Google的统计工具，还有就是国内使用很广的<a href="http://zhanzhang.cnzz.com/">CNZZ</a>了，注册后，添加并验证你的网站就可以添加统计代码了，选好自己喜欢的样式，获得代码，可添加到<code>source/_includes/custom/footer.html</code>中。即可查看每天你的博客的流量，进行相应的优化了。</p>

<p>最后还要提的就是<a href="http://zhanzhang.baidu.com/site/index">百度站长工具</a>和<a href="http://tongji.baidu.com/web/welcome/login">百度统计了</a>，方法和CNZZ方法类似，统计代码也可以添加到<code>source/_includes/custom/footer.html</code>中。但是我发现似乎百度统计并不太准确，并且百度很难搜的到我的博客。</p>

<p>我的统计代码添加如下，包括百度统计和CNZZ：

``` html</p>

<p>
  Copyright &copy; {{ site.time | date: "%Y" }} - {{ site.author }} -
  <span class="credit">
          Powered by 
          <a href="http://octopress.org">Octopress</a>
  </span>
  <script type="text/javascript">
        var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
        document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F25fb42e16458b238f8da9ba05d6b9d4d' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1000106316'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s22.cnzz.com/z_stat.php%3Fid%3D1000106316%26show%3Dpic' type='text/javascript'%3E%3C/script%3E"));</script>
</p>


<p>```
</p>

<h2>摘要和语法高亮</h2>

<p>如果想让文章在首页只显示一部分，只需要在文章中相应的位置添加<code>&lt;!-- more --&gt;</code>即可，在<code>_config.yml</code>中修改<code>excerpt_link: "继续阅读 &amp;rarr;"</code>来修改继续阅读按钮的显示内容。</p>

<p>octopress自带了语法高亮功能，使用的是<code>pygements.rb</code>，使用方法见<a href="http://octopress.org/docs/plugins/backtick-codeblock/">Backtick Code Blocks</a>，支持的语言见<a href="http://pygments.org/docs/lexers/">Supported languages</a>。</p>

<p>其他方法见<a href="http://octopress.org/docs/plugins/include-code/">embed code from a file</a>、<a href="http://octopress.org/docs/plugins/gist-tag/">embed GitHub gists</a>或<a href="http://xiongbupt.github.io/blog/2012/06/08/octopressdai-ma-gao-liang/">Octopress代码高亮</a>。</p>

<h2>站内搜索</h2>

<p>最后，还有一点我想实现但却始终没实现了的功能，就是站内搜索。octopress自带了google的搜索，在搜索栏中搜索后，相当于在google中指定搜索域为你的博客进行搜索，然后跳到Google页面，虽然能搜到你博客中的相关内容，但是作为有强迫症的我认为这和整个博客风格不太符。我想实现的效果是如<a href="http://yortz.it/about">这个博客</a>所实现的站内搜索一样。这就需要使用<a href="https://github.com/yortz/octopress-lunr-js-search">Octopress Lunr.js plugin</a>，但我安装安装方法试验了好几次，还是没有成功。</p>

<p>如果谁安装成功了，还希望指点我一下。</p>

<hr />

<p>好了，关于octopress也写了好几篇文章了，主要想记录一下自己搭建博客的过程，怕自己忘掉，以后再搭还要从头再来。也是刚开始写博客，需要练习的过程，开始虽然写的不好，但坚持下来总是会有收获的。</p>

<p>参考文章：</p>

<ul>
<li><p><a href="http://codemacro.com/2012/09/06/octopress-seo/">Octopress中的SEO</a></p></li>
<li><p><a href="http://www.cnblogs.com/hswg/archive/2013/01/15/2860952.html">Octopress技巧之设置关键字和描述</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress主题样式修改]]></title>
    <link href="http://812lcl.com/blog/2013/10/27/octopresszhu-ti-yang-shi-xiu-gai/"/>
    <updated>2013-10-27T11:52:00+08:00</updated>
    <id>http://812lcl.com/blog/2013/10/27/octopresszhu-ti-yang-shi-xiu-gai</id>
    <content type="html"><![CDATA[<p><a href="http://812lcl.github.io/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/">上一篇文章</a>写了很多侧边栏和社会化评论分享系统的定制，现在说一说，主题样式的修改。</p>

<h2>1. Header，Navigation，footer</h2>

<p>这几个部分是经常需要个性化定制的，在<code>source/_includes</code>中存在其对应的HTML文件，这是主题默认的文件，更换主题，更新octopress会被覆盖，所以应该编辑<code>source/_includes/custom</code>下的文件来实现修改。</p>

<h3>1.1 Header（标题栏）</h3>

<p>标题栏显示的内容为<code>/source/_includes/custom/header.html</code>所实现的，其中title和subtitle在<code>_config.yml</code>中定义，你可以进行适量的修改：

``` html
<hgroup>
  <h1><a href="{{ root_url }}/">{{ site.title }}</a></h1>
  {% if site.subtitle %}</p>

<pre><code>&lt;h2&gt;{{ site.subtitle }}&lt;/h2&gt;
</code></pre>

<p>  {% endif %}
</hgroup>
```
</p>

<!--more-->


<h3>1.2 Navigation（导航栏）</h3>

<p>可以自行为导航栏添加项目，链接至不同的页面，在<code>/source/_includes/custom/navigation.html</code>中编辑即可。

```</p>

<ul class="main-navigation">
  <li><a href="{{ root_url }}/">博客主页</a></li>
  <li><a href="{{ root_url }}/blog/archives">文章列表</a></li>
  <li><a href="{{ root_url }}/category-cloud">分类云</a></li>
  <li><a href="{{ root_url }}/about">关于</a></li>
</ul>


<p>```
</p>

<p>当想添加一些页面，如“关于”页面，可以试验<code>rake new_page['name']</code>命令来创建，如<code>rake new_page['about']</code>后，会建立<code>source/about/index.html</code>文件，在此文件编辑，添加自己想要展示的内容，然后再<code>navigation.html</code>里添加正确的路径即可，如<code>&lt;li&gt;&lt;a href="/about"&gt;关于&lt;/a&gt;&lt;/li&gt;</code>。</p>

<h3>1.3 footer（尾栏）</h3>

<p>在<code>source/_includes/custom/footer.html</code>中编辑尾栏：

```</p>

<p>
  Copyright &copy; {{ site.time | date: "%Y" }} - {{ site.author }} -
  <span class="credit">
          Powered by 
          <a href="http://octopress.org">Octopress</a>
  </span>
</p>


<p><code>``

默认显示</code>Copyright@2013 &ndash; author &ndash; Powered by Octopress`，你可以添加自己想显示在尾栏的东西，第三方统计流量统计工具也可以添加到这，如CNZZ、Google analytics和百度统计等，使用这些工具可以更详细的分析网站流量，改善引流措施，完善网站，具体添加方法见<a href="http://812lcl.com/blog/2013/10/29/octopresstian-jia-tong-ji-yu-seo">统计工具与SEO</a>。</p>

<h2>2. 样式修改</h2>

<p>添加或修改控制样式，需编辑<code>sass/custom/_styles.scss</code>，博客的所有颜色控制在<code>/sass/base/_theme.scss</code>中进行设置。定制自己的配色，编辑<code>sass/custom/_colors.scss</code>。查看<a href="http://hslpicker.com/#e1ff00">HSL COLOR PICKER</a>，帮你挑选喜欢的颜色。</p>

<p>修改布局，需要编辑<code>sass/base/_layout.scss</code>，可以修改各部分的宽度等。</p>

<h3>2.1 添加背景图片</h3>

<p>在<code>sass/custom/_styles.scss</code>中添加：
``` scss
html {</p>

<pre><code>    background: #555555 url("/images/bg3.jpg");
    //background: #555555;
</code></pre>

<p>}</p>

<p>body > div {</p>

<pre><code>    background-image: none; 
    //background: #F5F5D5
</code></pre>

<p>} //侧边栏</p>

<p>body > div > div { //文章内容</p>

<pre><code>    background-image: none; 
    //background: #F5F5D5; 
    //background: url("/images/bg.jpg");
</code></pre>

<p>}
<code>``
将背景图片放入</code>source/images/<code>中，修改上述代码中的路径指向想要的图片，即可
更改博客、侧边栏或文章的背景图片。博客使用背景图片后，与Header区不太和谐，
所以我在</code>/sass/base/_theme.scss<code>中将</code>header-bg`设置成透明色了。</p>

<h3>2.2 LOGO图片</h3>

<p>我所说的logo图片有两种，一个是打开一个网页时，标签栏上显示的小图片。还有一个是标题栏主标题旁的图片。</p>

<p>首先针对于第一种可以选择你喜欢的图片（大小适中），替换<code>source</code>目录下的<code>favicon.png</code>即可。</p>

<p>或者将logo图片放入<code>source/images</code>中，然后修改<code>source/_includes/head.html</code>，找到<code>favicon.png</code>，修改其路径指向你的图片即可。</p>

<p>对于主标题旁的图片需要在<code>sass/custom/_styles.scss</code>中填入如下语句：
``` scss
//Blog logo pic
@media only screen and (min-width: 550px) {</p>

<pre><code>    body &gt; header h1{
            background: url("/images/logo1.png") no-repeat 0 1px;
            padding-left: 65px;
    }

    body &gt; header h2 { padding-left: 65px; }
</code></pre>

<p>}
```
根据自己情况进行修改即可。</p>

<h3>2.3 导航栏倒圆角</h3>

<p>我设置的header区背景色透明，所以导航栏的直角有些尖锐，在<code>sass/custom/_styles.scss</code>中添加如下语句，将其修改为圆角：
``` scss
//倒圆角
@media only screen and (min-width: 1040px) {</p>

<pre><code>    body &gt; nav {
            @include border-top-radius(.4em);
    }

    body &gt; footer {
            @include border-bottom-radius(.4em);
    }
</code></pre>

<p>}
```</p>

<h2>3. 滑动返回顶部按钮</h2>

<p>当文章较长，通常希望有一个返回顶部的按钮，如下方法实现了在页面右下方添加一个返回顶部的图片按钮，点击后可以滑动的返回顶部。</p>

<p>首先创建<code>source/javascripts/top.js</code>，实现滑动返回顶部效果，添加如下代码：
``` js
function goTop(acceleration, time)
{</p>

<pre><code>    acceleration = acceleration || 0.1;
    time = time || 16;

    var x1 = 0;
    var y1 = 0;
    var x2 = 0;
    var y2 = 0;
    var x3 = 0;
    var y3 = 0;

    if (document.documentElement)
    {
            x1 = document.documentElement.scrollLeft || 0;
            y1 = document.documentElement.scrollTop || 0;
    }
    if (document.body)
    {
            x2 = document.body.scrollLeft || 0;
            y2 = document.body.scrollTop || 0;
    }
    var x3 = window.scrollX || 0;
    var y3 = window.scrollY || 0;

    var x = Math.max(x1, Math.max(x2, x3));
    var y = Math.max(y1, Math.max(y2, y3));

    var speed = 1 + acceleration;
    window.scrollTo(Math.floor(x / speed), Math.floor(y / speed));

    if(x &gt; 0 || y &gt; 0)
    {
            var invokeFunction = "goTop(" + acceleration + ", " + time + ")";
            window.setTimeout(invokeFunction, time);
    }         
</code></pre>

<p>}
<code>
然后创建`source/_includes/custom/totop.html`，设置返回顶部按钮样式和位置，代码如下：
</code> html</p>

<!--返回顶部开始-->


<div id="full" style="width:0px; height:0px; position:fixed; right:180px; bottom:150px; z-index:100; text-align:center; background-color:transparent; cursor:pointer;">
        <a href="#" onclick="goTop();return false;"><img src="http://812lcl.com/images/top.png" border=0 alt="返回顶部"></a>
</div>


<script src="http://812lcl.com/javascripts/top.js" type="text/javascript"></script>


<!--返回顶部结束-->


<p><code>``
最后，还需要将返回顶部的图片放入</code>source/images<code>，命名为</code>top.png`（或修改totop.html中图片的路径）。</p>

<h2>4. 二维码展示</h2>

<p>在关于页面或边栏可以展示你的个人博客的二维码，方便移动终端扫描访问你的博客，插件主页<a href="https://github.com/sailor79/Octopress-dynamic-QR-Code-aside">点击这里</a>。</p>

<p>在侧边栏显示，则将<code>qrcode.html</code>放入<code>source/_includes/custom/asides/</code>中，在<code>_config.yml</code>中<code>default_asides</code>添加<code>custom/asides/qrcode.html</code>即可显示。</p>

<p>或者将<code>qrcode.html</code>代码添加到你想展示的页面的HTML文件中亦可。</p>

<hr />

<p>参考文章：</p>

<ul>
<li><p><a href="http://yanping.me/cn/blog/2012/01/07/theming-and-customization/">为Octopress修改主题和自定义样式</a></p></li>
<li><p><a href="http://shanewfx.github.io/blog/2012/08/13/improve-blog-theme/">Octopress主题改造</a></p></li>
<li><p><a href="http://www.neoease.com/javascript-go-top/">用 JavaScript 实现变速回到顶部</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress侧边栏及评论系统定制]]></title>
    <link href="http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/"/>
    <updated>2013-10-26T22:36:00+08:00</updated>
    <id>http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi</id>
    <content type="html"><![CDATA[<p>在<a href="http://812lcl.github.io/blog/2013/10/25/octopressbo-ke-da-jian-ji-mu-lu-jie-gou/">上一篇文章</a>中，已经搭建起了octopress博客。使用的是默认的主题，样式千篇一律，而且自带的一些功能和侧边栏并不适合国内的国情，得不到网络的支持，如facebook、twitter、google plus和disqus等。所以还是有必要进行一下改造，打造中国特色octopress博客的。</p>

<h2>1. 第三方主题</h2>

<p>首先，你先要选定的是博客使用的第三方主题，因为如果你已经进行了很多的网页设置，添加了很多的插件，再来改主题，你就要面临悲剧了，你会发现你已经配置好的东西被替换掉了，这无疑会对你的热情带来打击。所以我们先来看看第三方主题。</p>

<p>你需要先找到自己喜欢的主题，之后可以在此主题上进行修改。<a href="http://opthemes.com/">点击这里</a>是一个主题网站，给出了不同主题的预览图，使用该主题的博客和该主题的GitHub链接。选中你想要的，获得GitHub仓库地址，如下安装
<code>
$ cd blog
$ git clone https://github.com/shashankmehta/greyshade.git ./themes/greyshade
$ rake install['greyshade']
$ rake generate
</code>
这里我的博客在blog文件夹中，以安装greyshade主题为例。你按照自己的情况进行更改。<code>rake generate</code>后可以通过<code>rake preview</code>访问<code>http://localhost:4000</code>预览新的主题样式，不满意可以更换其他主题。</p>

<!--more-->


<h2>2. 侧边栏</h2>

<p>侧边栏可以添加的插件很多，新浪微博、豆瓣等很多网站都有相应的插件，也可以到<a href="https://github.com/imathis/octopress/wiki">octopress的wiki页面</a>寻找。</p>

<p>侧边栏在<code>_config.yml</code>中设置，添加进<code>default_asides</code>中，先后顺序代表显示的先后顺序，各个侧边栏插件代码放入相应的位置即可，自己添加的一般放入<code>source/_includes/custom/asides</code>，<code>default_asides</code>中默认从<code>_includes</code>之后路径开始写。</p>

<h3>2.1 最新文章</h3>

<p>首先说一下主题中可用的插件。</p>

<p><code>asides/recent_posts.html</code>是最近写的文章的一个展示，添加到<code>default_asides</code>中即可显示，在<code>_config.yml</code>中可以设置显示最近多少篇文章，<code>recent_posts: 5</code>，注意冒号后有空格。</p>

<h3>2.2 GitHub Repos</h3>

<p><code>asides/github.html</code>则是GitHub repos的一个展示，可以直接到达你的GitHub页面，在<code>_config.yml</code>中设置你的Github账号，并设置为<code>true</code>即可，如下：
```</p>

<h1>Github repositories</h1>

<p>github_user: 812lcl     #我的github
github_repo_count: 0
github_show_profile_link: true
github_skip_forks: true
```</p>

<h3>2.3 微博秀</h3>

<p>新浪微博是一个信息传播非常迅速的媒介，如果你热衷于微博，可以在侧边栏添加自己的微博秀。首先需要获得自己的微博秀代码，链接为<a href="http://app.weibo.com/tool/weiboshow">http://app.weibo.com/tool/weiboshow</a>，进行相应的设置即可获得微博秀代码。</p>

<p>然后在<code>source/_includes/custom/asides</code>创建weibo.html，添加如下代码，刚刚获得的微博秀代码也要添加到相应位置：
``` html
<section></p>

<pre><code>&lt;h1&gt;新浪微博&lt;/h1&gt;
&lt;ul id="weibo"&gt;
&lt;li&gt;

&lt;!-- 在此插入获得的微博秀代码 --&gt;

  &lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p></section></p>

<p><code>``
最后在</code>default_asides<code>中加入</code>custom/asides/weibo.html`即可显示你的微博秀了。</p>

<h3>2.4 豆瓣展示</h3>

<p>你可以通过豆瓣读书、豆瓣电影、豆瓣音乐等多方面展示你自己，豆瓣也提供了类似微博秀的展示方式，添加方法也类似。获得豆瓣收藏秀的链接<a href="http://www.douban.com/service/badgemakerjs">http://www.douban.com/service/badgemakerjs</a>，根据自己的喜欢进行设置</p>

<p>然后在<code>source/_includes/custom/asides</code>创建douban.html，添加如下代码，刚刚获得的代码添加到<code>&lt;div&gt;</code>之间：
```
<section></p>

<pre><code>&lt;h1&gt;My Douban&lt;/h1&gt;
&lt;div&gt;
&lt;!--添加到这--&gt;
&lt;/div&gt;
</code></pre>

<p></section>
<code>``
最后在</code>default_asides<code>中加入</code>custom/asides/douban.html`显示你的豆瓣展示。</p>

<h3>2.5 访客地图</h3>

<p>效果如我的博客右侧那个精美的3D旋转地球所示，它可以显示访客数量，访客来自的地域，既有装饰作用，又有统计作用。它也有2D效果版，可以根据自己喜欢进行设置，地址在<a href="http://www.revolvermaps.com/?target=setup">这里</a>，然后获得代码。</p>

<p>依然在<code>source/_includes/custom/asides</code>创建earth.html，代码如下：
```
<section></p>

<pre><code>&lt;h1&gt;访客地图&lt;/h1&gt;
&lt;!--获得代码添加到这--&gt;
</code></pre>

<p></section></p>

<p><code>``
在</code>default_asides<code>中加入</code>custom/asides/earth.html`显示你定制的访客地图。</p>

<h3>2.6 酷站博客</h3>

<p>你有一些经常去的网站、博客，想推荐给大家，则可以在侧边栏加上一个“酷站博客”，当然名字你自己取即可。</p>

<p>在<code>source/_includes/custom/asides</code>创建blog_link.html，代码如下：
```
<section></p>

<h1>酷站博客</h1>


<ul>
        <li>
        <a href="http://blog.jobbole.com/">伯乐在线</a>
        </li>
        <li>
        <a href="http://www.csdn.net/">CSDN</a>
        </li>
        <li>
        <a href="http://www.cnblogs.com/">博客园</a>
        </li>
        <li>
        <a href="http://coolshell.cn/">酷壳CoolShell</a>
        </li>
        <li>
        <a href="http://www.cnblogs.com/Solstice/">陈硕</a>
        </li>
</ul>


<p></section>
<code>``
可以自行添加喜爱网站，然后在</code>default_asides<code>中加入</code>custom/asides/blog_link.html`。</p>

<p>看到这，你应该很熟悉添加侧边栏的流程了吧。</p>

<h3>2.7 最热文章</h3>

<p>Octopress Popular Posts Plugin是根据Google page rank计算，展示出权值最高的文章，插件的项目主页为<a href="https://github.com/octopress-themes/popular-posts">点击这里</a>。</p>

<p>这个插件的安装与之前的方法不同，首先在<code>Gemfile</code>中添加</p>

<pre><code>gem 'octopress-popular-posts'
</code></pre>

<p><code>Gemfile</code>中的是bundle安装时安装的所有依赖的软件，然后用bundle安装</p>

<pre><code>bundle install
</code></pre>

<p>执行命令，将插件拷贝到你的source目录，如下：</p>

<pre><code>bundle exec octopress-popular-posts install
</code></pre>

<p>到这就安装完了，可以设置显示了，在<code>_config.yml</code>中设置，增加下面一行：</p>

<pre><code>popular_posts_count: 5      # Posts in the sidebar Popular Posts section
</code></pre>

<p>设置边栏显示文章数，最后在<code>default_asides</code>中添加<code>custom/asides/popular_posts.html</code>，即可显示出来。</p>

<p>这样就设置好了，同时建议将缓存的page rank文件添加进你的<code>.gitignore</code>中</p>

<pre><code>.page_rank
</code></pre>

<h3>2.8 3D标签云与标签列表</h3>

<p>octopress默认的只支持category的分类，而并没有tag。category和tag分别代表有序/无序的知识点归纳。一篇文章只能属于一个category，但可以有多个tag。原来的plugin下只有category_generator.rb插件，实现category功能，在github上有两个插件帮助实现了tag生成和tag cloud功能<a href="https://github.com/robbyedwards/octopress-tag-pages">插件1</a>，<a href="https://github.com/robbyedwards/octopress-tag-cloud">插件2</a>。但似乎并不支持中文，而category_generator.rb是支持中文的，所以我有样学样，改成了支持中文的，并且实现了3D标签云的，插件已经上传到<a href="https://github.com/812lcl/category_tag">github</a>。clone到你博客的目录即可。</p>

<p>包含文件如下：
```
 ├─ plugins/</p>

<pre><code>│  ├─ category_generator.rb
│  ├─ category_list.rb
│  ├─ category_tag_cloud.rb
│  ├─ tag_generator.rb
│  └─ tag_list.rb
└─ source/
   └─ _includes/
      └─ custom/
         └─ asides/
            ├─ category_cloud.html
            ├─ category_list.html
            ├─ tag_cloud.html
            └─ tag_list.html
</code></pre>

<p><code>``
其中</code>category_generator.rb<code>和</code>tag_generator.rb<code>定义了根据文章的category和tag标签分类存储文章的方法，</code>category_tag_cloud.rb<code>则可以定义了根据category或tag生成3D标签云的方法。</code>category_list.rb<code>和</code>tag_list.rb`实现了将所有文章的category和tag列出来的方法，其中category可以显示文章个数，tag根据此标签文章多少，大小随着改变。</p>

<p>四个HTML文件则是category和tag的列表和3D标签云的侧边栏实现。需要哪个，在<code>default_asides</code>中添加即可。</p>

<p>还有一点需要注意，在_config.yml中默认设置了category的目录，需自己加入tag目录
<code>
category_dir: blog/categories
tag_dir: blog/tags
</code>
这样可以观看效果了，不过3D效果的标签云，对于不支持flash的浏览器无效，如<code>safari</code>。</p>

<p>标签功能的实现，我参考了一下几篇文章：</p>

<ul>
<li><p><a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">为octopress添加分类(category)列表</a></p></li>
<li><p><a href="http://blog.log4d.com/2012/05/tag-cloud/">给 Octopress 加上标签功能</a></p></li>
<li><p><a href="http://guori12321.github.io/blog/2013/08/20/gei-octopresstian-jia-3dyun-biao-qian/">给octopress添加3D标签云</a></p></li>
</ul>


<h3>2.9 相关文章功能</h3>

<p>此功能即根据当前阅读的文章，分析博客中其他与此相近的文章，进行推荐的一个功能，在octopress wiki中推荐的第三方插件中有一个插件实现此功能，项目主页<a href="https://github.com/jcftang/octopress-relatedposts">点击这里</a>。该插件，利用octopress自带的LSI实现对文章分析分类，然后进行推荐，但当文章较多时分类过慢，它推荐安装GSL来进行分类。我安装过这个功能，但不知道它是根据什么规则分类，而且之后不知道安装了什么，之后每次分类都会出错。你可以自己尝试一下，项目主页都有详细的步骤。</p>

<p>就在我想放弃这个功能的时候，我发现了它――<a href="https://github.com/LawrenceWoodman/related_posts-jekyll_plugin">related_posts-jekyll_plugin</a>。这个插件很简单，只需下载_plugins/related_posts.rb放在自己的plugins文件夹中，然后在想添加相关文章推荐的地方添加如下语句：

```
<section></p>

<pre><code>&lt;h2&gt;相关文章：&lt;/h2&gt;
&lt;ul class="posts"&gt;
     {% for post in site.related_posts limit:5 %}
        &lt;li class="related"&gt;
        &lt;a href="{{ root_url }}{{ post.url }}"&gt;{{ post.title }}&lt;/a&gt;
        &lt;/li&gt;
    {% endfor %}
&lt;/ul&gt;
</code></pre>

<p> </section>
```

我是在source/_layouts/post.html中加入的这些语句，这个html文件是打开博文时的布局，我将相关文章添加在博文的结束处。</p>

<p>这个插件是根据文章的tag进行分类的，根据所有博文与本篇文章共同tag的多少依次排序进行推荐，还是很简单有效的。</p>

<p>参考<a href="http://techtinkering.com/2011/08/17/improving-related-posts-on-jekyll/">这里</a></p>

<h2>3. 社会化评论与分享</h2>

<h3>3.1 友言和加网</h3>

<p>octopress内置了disqus评论系统，不适合我国基本国情，所以需要用一些国内的第三方评论系统，如友言、多说，可以以微博、人人、QQ等账号登陆发表评论，网站通过验证后可以对评论进行分析，管理。</p>

<p>多说评论系统可参见<a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">为 Octopress 添加多说评论系统</a>，不多做介绍。</p>

<p>我主要使用的是友言的一套评论系统及插件，分享使用的是加网JiaThis。首先注册<a href="http://www.uyan.cc/">友言</a>账号，否则无法进行后台管理。注册之后获得代码，添加到<code>source/_includes/post/share_comment.html</code>。加网<a href="http://www.jiathis.com/getcode/icon">点击这里</a>，定制自己喜欢的样式，获得代码也添加到上述文件中。</p>

<p>share_comment.html文件中代码如下（每个人不同）：
```</p>

<!-- JiaThis BEGIN -->


<div class="jiathis_style_32x32">
        <a class="jiathis_button_qzone"></a>
        <a class="jiathis_button_tsina"></a>
        <a class="jiathis_button_tqq"></a>
        <a class="jiathis_button_weixin"></a>
        <a class="jiathis_button_renren"></a>
        <a href="http://www.jiathis.com/share?uid=*******" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
        <a class="jiathis_counter_style"></a>
</div>


<script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=1361705530382241" charset="utf-8"></script>


<!-- JiaThis END -->




<!-- Baidu Button BEGIN 
<div id="bdshare" class="bdshare_t bds_tools_32 get-codes-bdshare">
        <a class="bds_tsina"></a>
        <a class="bds_qzone"></a>
        <a class="bds_tqq"></a>
        <a class="bds_renren"></a>
        <a class="bds_t163"></a>
        <a class="bds_hi"></a>
        <span class="bds_more"></span>
        <a class="shareCount"></a>
</div>
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=6839808" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
        document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
 Baidu Button END -->




<!-- UY BEGIN -->


<div id="uyan_frame"></div>


<script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=*******"></script>


<!-- UY END -->


<p>```
其中有一段代码注释掉了，那是我曾经添加的百度分享的代码，如果使用其他分享或评论，代码也可以添加到这。</p>

<p>现在功能代码在share_comment.html中了，下面需要使其显示到博文的底部。</p>

<p>首先在_config.yml中添加开关：
```</p>

<h1>comment and share</h1>

<p>comment_share: true
<code>
然后在`source/_includes/post/sharing.html`中添加如下代码：

</code>
{% if site.comment_share %}
  {% include post/share_comment.html %}
{% endif %}
```

最后需要使你的网站通过友言的验证，才可以进行后台管理，后台可以进行评论管理、社交影响力分析、和评论栏的风格功能设置。</p>

<h3>3.2 评论热榜和最新评论侧边栏</h3>

<p>友言提供了多个嵌入式组件，如评论热榜、最新评论、评论计数等。我们可以将他们做成侧边栏进行展示，或在首页文章列表中，显示每篇文章的评论数目。</p>

<p>首先在你的友言后台管理中找到<code>安装设置-&gt;嵌入式组件</code>获得评论热榜和最新评论的代码，分别创建<code>source/_includes/custom/asides/uyan_hotcmt.html</code>和<code>source/_includes/custom/asides/uyan_newcmt.html</code>，代码如下：</p>

<p>```
<section></p>

<h1>评论热榜</h1>


<div id="uyan_hotcmt_unit"></div>


<pre><code>    &lt;script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=*******"&gt;&lt;/script&gt;
</code></pre>

<p></section>
```</p>

<p>```
<section></p>

<h1>最新评论</h1>


<div id="uyan_newcmt_unit"></div>


<pre><code>    &lt;script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=*******"&gt;&lt;/script&gt;
</code></pre>

<p></section>
```</p>

<p>然后再<code>_config.yml</code>的<code>default_asides</code>中添加其路径即可显示在侧边栏中。</p>

<p>友言评论框、评论热榜、最新评论可以在后台进行设置，改变设置并不需要更改代码。</p>

<h3>3.3 评论计数显示</h3>

<p>友言提供评论计数功能，可以将每篇文章的评论数显示在博客首页相应文章题目旁。实现方法为：在<code>source/_includes/article.html</code>中

<code>
{% include post/date.html %}{{ time }}
</code>

的后边填入嵌入组件中获得的评论计数的代码，需要修改其中一些内容

<code>
 | &lt;a href="{% if index %}{{ root_url }}{{ post.url }}{% endif %}#comments" id="uyan_count_unit" du="" su=""&gt;0条评论&lt;/a&gt;
  &lt;script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=*******"&gt;&lt;/script&gt;
</code>
</p>

<h2>4. 为博文添加原文链接及声明</h2>

<p>可以为你的每篇博文末尾加上原文链接，方法很简单，只需创建<code>plugins/post_footer_filter.rb</code>，代码如下：
``` rb</p>

<h1>post_footer_filter.rb</h1>

<h1>Append every post some footer infomation like original url</h1>

<h1>Kevin Lynx</h1>

<h1>7.26.2012</h1>

<p>#
require &lsquo;./plugins/post_filters&rsquo;</p>

<p>module AppendFooterFilter</p>

<pre><code>    def append(post)
            author = post.site.config['author']
            url = post.site.config['url']
            pre = post.site.config['original_url_pre']
            post.content + %Q[&lt;p class='post-footer'&gt;
                    #{pre or "original link:"}&lt;a href='#{post.full_url}'&gt;#{post.full_url}&lt;/a&gt;&lt;br/&gt;&amp;nbsp;written by &lt;a href='#{url}'&gt;#{author}&lt;/a&gt;&amp;nbsp;posted at &lt;a href='#{url}'&gt;#{url}&lt;/a&gt;&lt;/p&gt;]
    end
</code></pre>

<p>end</p>

<p>module Jekyll</p>

<pre><code>    class AppendFooter &lt; PostFilter
            include AppendFooterFilter
            def pre_render(post)
                    post.content = append(post) if post.is_post?
            end
    end
</code></pre>

<p>end</p>

<p>Liquid::Template.register_filter AppendFooterFilter
<code>``
并可以针对这一区域的样式进行美化，在</code>sass/custom/_style.scss`末尾增加下列内容：</p>

<pre><code>.post-footer{margin-top:10px;padding:5px;background:none repeat scroll 0pt 0pt #eee;font-size:90%;color:gray}
</code></pre>

<p>尊重原创，此功能来源<a href="http://codemacro.com/2012/07/26/post-footer-plugin-for-octopress/">为octopress每篇文章添加一个文章信息</a>。</p>

<h2>5. 公益404</h2>

<p>在<code>source</code>目录下创建404.markdown，添加如下代码，即可实现公益404的功能，当你的网页出错找不到时，可以为公益尽一份力。</p>

<h2>```</h2>

<p>layout: page
title: &ldquo;404 Error&rdquo;
date: 2013-10-10 19:17
comments: false
sharing: false</p>

<h2>footer: false</h2>

<script type="text/javascript" src="http://www.qq.com/404/search_children,js" charset="utf-8></script>


<p>```</p>

<hr />

<p>好了先写到这了，还有一些东西没写，等后续再写吧。</p>

<p>参考文章：</p>

<ul>
<li><p><a href="http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/">定制Octopress</a></p></li>
<li><p><a href="http://xuhehuan.com/141.html">精美的3D旋转地球统计RevolverMaps</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客搭建及目录结构]]></title>
    <link href="http://812lcl.com/blog/2013/10/25/octopressbo-ke-da-jian-ji-mu-lu-jie-gou/"/>
    <updated>2013-10-25T11:49:00+08:00</updated>
    <id>http://812lcl.com/blog/2013/10/25/octopressbo-ke-da-jian-ji-mu-lu-jie-gou</id>
    <content type="html"><![CDATA[<p>搭建个人博客的想法有一段时间了，不是认为自己有多牛，而是想通过写博客记录并反思自己的学习历程，能使学过的东西更具条理，慢慢形成自己的知识体系。但自己租个服务器，买个域名，一点一点搭建一个网站成本又太大，我对HTML、javascript、css等前端技术了解有限，网站搭建很多技术也知之甚少。但后来Jekyll、Octopress、GitHub pages让我搭建个人博客成为了可能。</p>

<p>最终选择了octopress，也是因为他的简单，他基于Jekyll，处理了Jekyll的很多麻烦设置，也不需要对前端技术有很深的了解，从一开始什么也没有，到搭建起一个可用的博客只需花费十几分钟，十分方便，虽然想要配置齐自己想要的东西还是需要一番折腾的，但那是后话了。</p>

<p>我的搭建环境是ubuntu 13.04，不同的系统需要作出相应的修改，但变化不大。我的博客中添加了3D标签、微博秀、豆瓣读书、相关文章推荐、访客地图、评论分享、文章热度排名等等很多东西，本文主要介绍简单博客的搭建和目录结构，之后会写篇文章介绍各个模块的搭建。</p>

<!--more-->


<h2>开始搭建</h2>

<p>Octopress博客是搭建在github上的静态网页，octopress相当于一个自动化生成静态网页的工具，网页并没有使用数据库等，使用的是github提供的服务器和域名。github pages为每个用户提供一个名为<code>http://username.github.com</code>的域名。你首先需要在github上建立一个名为<code>username.github.com</code>的仓库，之后的博客将会部署到这个仓库中，部署成后你就可以从<code>http://username.github.com</code>访问你的博客了，不过可能需要等待十分钟。</p>

<p>利用到了github，所以首先应该配置好你的git环境，包括安装git，创建ssh公私钥与github建立信任连接，设置github用户名和邮箱，如果你不熟悉可以参考<a href="http://www.worldhello.net/gotgithub/index.html">GotGitHub</a>。当然你还有熟悉git的基本操作了，<a href="http://rogerdudler.github.io/git-guide/index.zh.html">这里</a>是一个简易教程。</p>

<p>octopress和jekyll都是依赖于Ruby的，所以如果你没装，先要装一下它咯。octopress 2.0是依赖于Ruby 1.9.3版本的，所以我们指明版本安装：</p>

<pre><code>sudo apt-get install ruby1.9.3
</code></pre>

<p>接下来就可以安装Octopress了，首先将octopress库clone到本地，在想要放置本地仓库的位置，建一个文件夹，文件夹名随你，比如我在$HOME/处建立了blog：
<code>
$ cd ~
$ mkdir blog
$ git clone git://github.com/imathis/octopress.git blog
</code>
然后进入仓库，安装其他的依赖环境：
<code>
$ cd blog
$ sudo gem install bundler
$ rbenv rehash
$ bundle install        #根据Gemfile安装依赖的工具，需要耐心等待
</code>
安装默认主题</p>

<pre><code>rake install
</code></pre>

<p>现在octopress安装完成，但还没有生成静态网页，还没有将其部署到网上，要设置博客使用的REPOSITORY了：
<code>
$ rake setup_github_pages
Enter the read/write url for your repository
(For example, 'git@github.com:your_username/your_username.github.com')
Repository url:
</code>
请输入：git@github.com:yourname/yourname.github.com.git (将yourname替换成你的github登录名)</p>

<p>这个步骤rake会做很多事情：</p>

<ol>
<li>在.git/config中替换origin为你输入的repository，并把原来的origin写到octopress中。</li>
<li>创建新的branch source并切换到这个branch。</li>
<li>在生成的_deploy目录下，初始化git repository为你的repository。</li>
</ol>


<p>接下来就可以生成静态网页，并将其部署到github上了，只需如下两句：
<code>
rake generate   #生成静态网页
rake deploy     #发布网页
</code>
等待几分钟后，网页就已经部署好了，你可以访问你的域名查看自己的博客了。然后可以将源码添加到github中进行管理，你仓库中有两个分支，master分支是静态网页，source分支则是你的生成网页的源码，这样在另一台电脑上你可以clone你的仓库，很容易的进行你的博客编写。
<code>
git add .
git commit -m 'init'
git push origin source
</code>
现在就可以进行文章的编写了，编写文章使用markdown语法，十分便捷，语法简单，可参见<a href="http://wowubuntu.com/markdown/index.html#code">markdown语法说明</a>。输入如下命令：</p>

<pre><code>rake new_post['title']
</code></pre>

<p>在~/blog/source/_posts下回生成一个名为<code>YYYY-MM-DD-title.markdown</code>的文件，在这个文件中编写你的文章即可。编写完成后依然按上边发布网页的方法发布即可：
<code>
rake generate   #生成静态网页
rake deploy     #发布网页
</code>
或者也可以生成静态网页后，在本机进行预览</p>

<pre><code>rake preview
</code></pre>

<p>然后可以通过<code>http://localhost:4000</code>访问，状态满意即可发布网页，以上几步同样适用于更改网页布局、样式等，重新发布网页。</p>

<h2>_config.yml</h2>

<p>这是你的博客根目录下下的一个文件，通过编写它，可以设置网站基本信息，设置边栏等：
```
url: <a href="http://812lcl.github.io">http://812lcl.github.io</a>        #网站地址
title: 812lcl的博客              #网站名
subtitle: 不要好高骛远，却又原地踏步；只想不做，太辜负青春了   #网站副标题
author: 812lcl                      #作者名
lunr_search: false                  #lunr站内搜索，需要安装，麻烦
simple_search: <a href="http://google.com/search">http://google.com/search</a>     #默认搜索引擎
description:                        #网站描述
&hellip;
default_asides: [custom/asides/tag_cloud.html, asides/recent_posts.html, custom/asides/popular_posts.html&hellip;]</p>

<h1>边栏需要在这里添加路径</h1>

<p>```
这个文件是很重要的配置文件，配置博客需要经常修改此文件。</p>

<h2>目录结构</h2>

<p>之所以要介绍目录结构，是为了更清晰的了解各个文件是做什么用的，修改网站样式添加侧栏等等需要修改那些文件。以免按着教程一个一个设置完成，在脑子中却一团糟不记得修改了什么，万一出现了错误就不好了。
```
├─ config.rb  #指定额外的compass插件
├─ config.ru<br/>
├─ Rakefile   #rake的配置文件,类似于makefile
├─ Gemfile    #bundle要下载需要的gem依赖关系的指定文件
├─ Gemfile.lock  #这些gem依赖的对应关系,比如A的x本依赖于B的y版本
├─ <em>config.yml   #站点的配置文件
├─ public/      #在静态编译完成后的目录,网站只需要这个目录下的文件树
├─ </em>deploy/     #deploy时候生成的缓存文件夹,和public目录一样
├─ sass/    #css文件的源文件,过程中会compass成css
├─ plugins/     #放置自带以及第三方插件的目录,ruby程序
│  └── xxx.rb
└─ source/  #站点的源文件目录,public目录就是根据这个目录下数据生成的
   └─ _includes/</p>

<pre><code>  └─ custom/    #自定义的模板目录,被相应上级html include
     └─ asides/     #边栏模板自定义模板目录
  └─ asides/        #边栏模板目录
  └─ post/          #文章页面相应模板目录
</code></pre>

<p>   └─ <em>layouts/         #默认网站html相关文件,最底层
   └─ </em>posts/       #新增以及从其它程序迁移过来的数据都存在这里
   └─ stylesheets/  #css文件目录
   └─ javascripts/      #js文件目录
   └─ images/       #图片目录
```</p>

<p>其中需要添加第三方插件时，将插件xxx.rb放入plugins文件夹中。最主要的文件夹是source文件夹，因为修改网页都是在这个文件夹中进行。自己添加的边栏的HTML文件都放置于<code>source/_includes/custom/asides</code>中，然后再_config.yml中的default_asides:中添加对应的路径，即可在网页上显示出边栏。修改<code>source/_includes/</code>中的其他HTML文件，如header.html等，则可以修改标题栏、导航栏、尾栏等等。</p>

<p><code>source/_layouts</code>中则是网站的布局的一些HTML文件，可以修改文件布局等等。三个文件夹目录是非常重要并且常修改的。source中images中则放置网站相关的一些图片，javascripts文件家中放置一些模块需要调用的javascript脚本，_post中则是你的每篇博客。</p>

<hr />

<p>以上就是Octopress博客搭建的一个简单过程和目录结构，之后会详细介绍我的博客中各个模块建立的过程及出现的问题，敬请关注。</p>

<p>参考文章：</p>

<ul>
<li><p><a href="http://easypi.github.io/blog/2013/01/05/using-octopress-to-setup-blog-on-github/">利用Octopress在github Pages上搭建个人博客</a></p></li>
<li><p><a href="http://www.dongwm.com/archives/qian-yi-octpressyi-ji-zi-ding-yi/">迁移octpress,Rakefile修改以及豆瓣推荐,豆瓣收藏秀,新浪微博分享按钮等实现</a></p></li>
<li><p><a href="http://www.csdn123.com/html/blogs/20130531/17852.htm">Octopress博客设置</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
