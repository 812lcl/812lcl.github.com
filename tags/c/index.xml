<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on 812lcl</title>
    <link>http://812lcl.com/tags/c/</link>
    <description>Recent content in C on 812lcl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 28 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://812lcl.com/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>重学C语言(四)——变量初始化</title>
      <link>http://812lcl.com/blog/2013/12/28/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E5%9B%9B%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://812lcl.com/blog/2013/12/28/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E5%9B%9B%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>&lt;!-- toc --&gt;

&lt;p&gt;首先来声明几个概念：&lt;/p&gt;

&lt;p&gt;存储类说明符：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;auto  register  static  extern  typedef&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;类型说明符：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void  char  short  int  long  float  double  
signed  unsigned  结构或联合说明符  
枚举说明符  类型定义名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;类型限定符：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const  volatile&lt;/code&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重学C语言(三)——复杂声明分析</title>
      <link>http://812lcl.com/blog/2013/12/22/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%B8%89%E5%A4%8D%E6%9D%82%E5%A3%B0%E6%98%8E%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 22 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://812lcl.com/blog/2013/12/22/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%B8%89%E5%A4%8D%E6%9D%82%E5%A3%B0%E6%98%8E%E5%88%86%E6%9E%90/</guid>
      <description>&lt;!-- toc --&gt;

&lt;p&gt;&lt;a href=&#34;http://812lcl.github.io/blog/2013/12/21/重学c语言二运算符优先级与计算顺序/&#34;&gt;上一篇文章&lt;/a&gt;是关于运算符的优先级的，这篇文章则来说说关于C语言中的复杂声明。C语言中的声明是不能从左往右读的，时而往左时而往右，有时候弄得人头大，什么数组指针、指针数组傻傻弄不清楚，函数指针更是模棱两可。复杂声明更是令人敬而远之了，常常被作为例子的就是系统调用里的signal函数了，它在signal.h中声明的，声明如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void (*signal(int, void(*)))(int);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是不是需要琢磨一番呢，其实在经典的C语言书籍中都很清楚地讲过这个问题了，C专家编程里讲得十分的好，而且这本书也十分的好，作者还时不时的小幽默一把。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重学C语言(二)——运算符优先级与计算顺序</title>
      <link>http://812lcl.com/blog/2013/12/21/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%BA%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8E%E8%AE%A1%E7%AE%97%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Sat, 21 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://812lcl.com/blog/2013/12/21/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%BA%8C%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8E%E8%AE%A1%E7%AE%97%E9%A1%BA%E5%BA%8F/</guid>
      <description>&lt;p&gt;对于一个复杂的表达式，存在很多的运算符，要了解这个表达式的意义，就要了解清运算符之间的优先关系与结合顺序。要确保表达式实现自己所想达成的目的，了解计算顺序也是非常必要的。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重学C语言(一)——类型转换</title>
      <link>http://812lcl.com/blog/2013/12/17/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%B8%80%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Tue, 17 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://812lcl.com/blog/2013/12/17/%E9%87%8D%E5%AD%A6c%E8%AF%AD%E8%A8%80%E4%B8%80%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>&lt;!-- toc --&gt;

&lt;p&gt;最近又读了一下基本 C 语言经典著作，特此整理下一些 C 语言的知识点。参考书籍有：C程序设计语言、C专家编程、C缺陷与陷阱
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>